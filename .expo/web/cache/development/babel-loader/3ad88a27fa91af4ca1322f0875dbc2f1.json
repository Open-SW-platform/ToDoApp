{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { viewStyles, textStyles, buttonStyle, barStyles } from \"../styles\";\nimport { images } from \"../images\";\nimport IconButton from \"../components/IconButton\";\nimport SelectDropdown from 'react-native-select-dropdown';\nexport default function HomeScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTask = _useState2[0],\n      setNewTask = _useState2[1];\n\n  var sortMenu = [\"Due date\", \"Added date\"];\n  return React.createElement(View, {\n    style: viewStyles.container\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    style: barStyles.statusBar\n  }), React.createElement(View, {\n    style: viewStyles.settingView\n  }, React.createElement(IconButton, {\n    type: images.menu\n  }), React.createElement(Text, null, \"  8.30 Monday \"), React.createElement(IconButton, {\n    type: images.dropDown\n  }), React.createElement(View, {\n    style: viewStyles.settingGroup\n  }, React.createElement(IconButton, {\n    type: images.search\n  }), React.createElement(IconButton, {\n    type: images.trash\n  }), React.createElement(IconButton, {\n    type: images.dot\n  }))), React.createElement(View, {\n    style: viewStyles.goalView\n  }, React.createElement(TextInput, {\n    style: {\n      padding: 10,\n      fontSize: 20\n    },\n    placeholder: \"TODAY'S GOAL\"\n  })), React.createElement(View, {\n    style: viewStyles.todolistView\n  }, React.createElement(View, {\n    style: viewStyles.sortMenuView\n  }, React.createElement(SelectDropdown, {\n    data: sortMenu,\n    buttonStyle: [{\n      margin: 8,\n      borderWidth: 1,\n      borderRadius: 3,\n      width: 120,\n      height: 35\n    }],\n    buttonTextStyle: [{\n      fontSize: 15\n    }],\n    onSelect: function onSelect(selectedItem, index) {\n      console.log(selectedItem, index);\n    },\n    buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n      return selectedItem;\n    },\n    rowTextForSelection: function rowTextForSelection(item, index) {\n      return item;\n    }\n  })), React.createElement(ScrollView, null, React.createElement(View, {\n    style: viewStyles.categoryView\n  }, React.createElement(IconButton, {\n    type: images.tag\n  }), React.createElement(Text, {\n    style: textStyles.contents\n  }, \" My Category \")), React.createElement(View, {\n    style: viewStyles.listView\n  }, React.createElement(IconButton, {\n    type: images.checked\n  }), React.createElement(Text, {\n    style: textStyles.contents\n  }, \"Do my assignment\")))), React.createElement(View, {\n    style: viewStyles.tabView\n  }));\n}","map":{"version":3,"sources":["C:/Users/vin/react-native-todo/src/screens/HomeScreen.js"],"names":["React","useState","viewStyles","textStyles","buttonStyle","barStyles","images","IconButton","SelectDropdown","HomeScreen","newTask","setNewTask","sortMenu","container","statusBar","settingView","menu","dropDown","settingGroup","search","trash","dot","goalView","padding","fontSize","todolistView","sortMenuView","margin","borderWidth","borderRadius","width","height","selectedItem","index","console","log","item","categoryView","tag","contents","listView","checked","tabView"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StatusBar, Text, View, Image, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\nimport {viewStyles, textStyles, buttonStyle, barStyles} from '../styles'\r\nimport { images } from '../images';\r\nimport IconButton from '../components/IconButton';\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\n\r\nexport default function HomeScreen() {\r\n\r\n  const [newTask, setNewTask] = useState('');\r\n  const sortMenu = [\"Due date\", \"Added date\"];\r\n\r\nreturn (\r\n  <View style={viewStyles.container}>\r\n    <StatusBar barStyle=\"light-content\" style={barStyles.statusBar} />\r\n    <View style={viewStyles.settingView}>\r\n      <IconButton type={images.menu} />\r\n      <Text>  8.30 Monday </Text>\r\n      <IconButton type={images.dropDown} />\r\n      <View style={viewStyles.settingGroup}>\r\n        <IconButton type={images.search} />\r\n        <IconButton type={images.trash} />\r\n        <IconButton type={images.dot} />\r\n      </View>\r\n    </View>\r\n    <View style={viewStyles.goalView}>\r\n      <TextInput\r\n        style={{ padding: 10, fontSize: 20 }}\r\n        placeholder=\"TODAY'S GOAL\" />\r\n    </View>\r\n    <View style={viewStyles.todolistView}>\r\n      <View style = {viewStyles.sortMenuView}>\r\n      <SelectDropdown \r\n        data={sortMenu}\r\n        buttonStyle = {[\r\n          {\r\n            margin: 8,\r\n            borderWidth: 1,\r\n            borderRadius: 3,\r\n            width: 120,\r\n            height: 35,\r\n          }\r\n        ]}\r\n        buttonTextStyle= {[\r\n          {\r\n            fontSize: 15,\r\n          }\r\n        ]}\r\n        onSelect={(selectedItem, index) => {\r\n          console.log(selectedItem, index);\r\n        } }\r\n        buttonTextAfterSelection={(selectedItem, index) => {\r\n          // text represented after item is selected\r\n          // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n          return selectedItem;\r\n        }}\r\n        rowTextForSelection={(item, index) => {\r\n        // text represented for each item in dropdown\r\n        // if data array is an array of objects then return item.property to represent item in dropdown\r\n          return item;\r\n        }}\r\n      />\r\n      </View>\r\n      <ScrollView>\r\n      <View style={viewStyles.categoryView}>\r\n        <IconButton type={images.tag} />\r\n        <Text style={textStyles.contents}> My Category </Text>\r\n      </View>\r\n      <View style={viewStyles.listView}>\r\n        <IconButton type={images.checked} />\r\n        <Text style={textStyles.contents}>Do my assignment</Text>\r\n      </View>\r\n      </ScrollView>\r\n    </View>\r\n    <View style={viewStyles.tabView}>\r\n    \r\n  </View>\r\n</View>\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}